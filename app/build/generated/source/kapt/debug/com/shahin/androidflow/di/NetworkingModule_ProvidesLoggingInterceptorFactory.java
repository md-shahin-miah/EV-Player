// Generated by Dagger (https://dagger.dev).
package com.shahin.androidflow.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.logging.HttpLoggingInterceptor;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkingModule_ProvidesLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  @Override
  public HttpLoggingInterceptor get() {
    return providesLoggingInterceptor();
  }

  public static NetworkingModule_ProvidesLoggingInterceptorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static HttpLoggingInterceptor providesLoggingInterceptor() {
    return Preconditions.checkNotNullFromProvides(NetworkingModule.INSTANCE.providesLoggingInterceptor());
  }

  private static final class InstanceHolder {
    private static final NetworkingModule_ProvidesLoggingInterceptorFactory INSTANCE = new NetworkingModule_ProvidesLoggingInterceptorFactory();
  }
}
